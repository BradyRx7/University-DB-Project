/*
 * Brady Reed
 * Umass Lowell INFO3010
 */
package bradyreed.view;

import bradyreed.baseclasses.OfferedCourse;
import bradyreed.model.OfferedCourseDataModel;

import bradyreed.baseclasses.Classroom;
import bradyreed.model.ClassroomDataModel;

/**
 *
 * @author brady
 */
public class InputCourseOffering extends javax.swing.JFrame {

        private OfferedCourseDataModel offeredCourseDataModel;
        private ClassroomDataModel existingClassroomsDataModel;
        protected String[] classroomStringList;
    /**
     * Creates new form InputCourseOfferings
     */
    public InputCourseOffering(OfferedCourseDataModel offeredCourseDataModelArg, 
            ClassroomDataModel existingClassroomsDataModelArg) {
    
        this.offeredCourseDataModel = offeredCourseDataModelArg;
        this.existingClassroomsDataModel = existingClassroomsDataModelArg;
      
        int classroomListLength;
        classroomListLength = existingClassroomsDataModel.getListOfClassrooms().size();
        String classroomNumberTempStorage;
        classroomStringList = new String[classroomListLength];
        for (int i = 0; i < classroomListLength; i++)
        {
            classroomNumberTempStorage =
                existingClassroomsDataModel.getListOfClassrooms().get(i).getRoomNumber();
            classroomStringList[i] = classroomNumberTempStorage;
        }
        
        
        initComponents();
        this.setSize(390, 280);    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        courseOfferingNameLabel = new javax.swing.JLabel();
        courseOfferingIdLabel = new javax.swing.JLabel();
        courseOfferingNameTextField = new javax.swing.JTextField();
        courseOfferingIdTextField = new javax.swing.JTextField();
        courseOfferingClassroomNumberLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        existingClassroomsListField = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        courseOfferingNameLabel.setText("Course Name:");
        getContentPane().add(courseOfferingNameLabel);
        courseOfferingNameLabel.setBounds(20, 20, 110, 14);

        courseOfferingIdLabel.setText("Course ID: ");
        getContentPane().add(courseOfferingIdLabel);
        courseOfferingIdLabel.setBounds(20, 60, 80, 14);
        getContentPane().add(courseOfferingNameTextField);
        courseOfferingNameTextField.setBounds(140, 20, 160, 30);
        getContentPane().add(courseOfferingIdTextField);
        courseOfferingIdTextField.setBounds(140, 60, 80, 30);

        courseOfferingClassroomNumberLabel.setText("Classroom Number:");
        getContentPane().add(courseOfferingClassroomNumberLabel);
        courseOfferingClassroomNumberLabel.setBounds(20, 100, 130, 14);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        getContentPane().add(saveButton);
        saveButton.setBounds(30, 190, 90, 23);

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clearButton);
        clearButton.setBounds(140, 190, 90, 23);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(closeButton);
        closeButton.setBounds(250, 190, 90, 23);

        existingClassroomsListField.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = classroomStringList;
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(existingClassroomsListField);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(140, 100, 180, 70);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        OfferedCourse newCourse = new OfferedCourse();
         
         Classroom courseRoom;
         String courseName = this.courseOfferingNameTextField.getText();
         String courseID = this.courseOfferingIdTextField.getText();
         courseRoom = new Classroom(this.existingClassroomsListField.getSelectedValue()); 
                 
        newCourse.setClassRoom(courseRoom);
        newCourse.setCourseId(courseID);
        newCourse.setCourseName(courseName);
        
        this.offeredCourseDataModel.getListOfOfferedCourses().add(newCourse);
        
        //testing the form save action only works when form run individually
        // with main program below
        
//        System.out.println("Save was successfull");
//        System.out.println(offeredCourseDataModel.getListOfOfferedCourses().get(1).toString());
        this.dispose();
        
    }//GEN-LAST:event_saveButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        this.courseOfferingNameTextField.setText("");
        this.courseOfferingIdTextField.setText("");
        this.existingClassroomsListField.clearSelection(); 
    }//GEN-LAST:event_clearButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputCourseOffering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputCourseOffering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputCourseOffering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputCourseOffering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        OfferedCourseDataModel offeredCoursesDataModel22 = new OfferedCourseDataModel();
        
        OfferedCourse testCourse = new OfferedCourse("123", "Biology");
        offeredCoursesDataModel22.getListOfOfferedCourses().add(testCourse);
        
        ClassroomDataModel classroomDataModelTest = new ClassroomDataModel();
        Classroom testRoom = new Classroom("9624", Classroom.Room.LECTURE_HALL);
        classroomDataModelTest.getListOfClassrooms().add(testRoom);
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputCourseOffering(offeredCoursesDataModel22, classroomDataModelTest).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel courseOfferingClassroomNumberLabel;
    private javax.swing.JLabel courseOfferingIdLabel;
    private javax.swing.JTextField courseOfferingIdTextField;
    private javax.swing.JLabel courseOfferingNameLabel;
    private javax.swing.JTextField courseOfferingNameTextField;
    private javax.swing.JList<String> existingClassroomsListField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}

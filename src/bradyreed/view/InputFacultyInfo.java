/*
 * Brady Reed
 * Umass Lowell INFO3010
 */
package bradyreed.view;

import java.util.GregorianCalendar;
import java.util.ArrayList;

import bradyreed.baseclasses.Faculty;
import bradyreed.baseclasses.FacultyCourse;
import bradyreed.model.FacultyDataModel;
import bradyreed.model.OfferedCourseDataModel;

import bradyreed.baseclasses.OfferedCourse;

/**
 *
 * @author brady
 * 
 * Potential upgrades:
 *  COULD CHANGE COURSE LIST BOX TO DISPLAY COURSE NAMES NOT COURSE IDS
 *      NEED A HASH OR SOMETHING... AND A WAY TO DISPLAY NAME BUT SAVE ID
 * 
 *  remove hr:min:sec from Gregorian calendar (not very easy to do)
 * 
 *  text wrapping (multi-line for input of actual address in address field
 */
public class InputFacultyInfo extends javax.swing.JFrame {
    
        protected String[] offeredCourseStringList;
        private FacultyDataModel facultydatamodel;
        private OfferedCourseDataModel offeredCoursesDataModel;
       
    /**
     * Creates new form ClassroomInputFormUsingNetbeans
     */
    public InputFacultyInfo(FacultyDataModel facultyDataModelArg,
                OfferedCourseDataModel offeredCoursesDataModelArg) {
        
        //Retrieve list of courses and convert to string array for netbeans
        // to display course list in a string array rather than ArrayList<String>
        this.facultydatamodel = facultyDataModelArg;
        this.offeredCoursesDataModel = offeredCoursesDataModelArg;
        
        int courseListLength;
        courseListLength = offeredCoursesDataModel.getListOfOfferedCourses().size();
        String courseId;
        offeredCourseStringList = new String[courseListLength];
        for (int i = 0; i < courseListLength; i++)
        {
            courseId = offeredCoursesDataModel.getListOfOfferedCourses().get(i).getCourseId();
            offeredCourseStringList[i] = courseId;
        }
        
        initComponents();
        // Set Size after creating
        this.setSize(390, 720);    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        facultyNameLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        facultyNameTextField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        facultyAddressTextField = new javax.swing.JTextField();
        facultySalaryTextField = new javax.swing.JTextField();
        facultySalaryLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        facultyDateofTerminationLabel = new javax.swing.JLabel();
        dateOfBirthSpinner_Month = new javax.swing.JSpinner();
        dateOfBirthSpinner_Day = new javax.swing.JSpinner();
        dateOfBirthSpinner_Year = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        facultyEmploymentTypeLabel = new javax.swing.JLabel();
        facultyCoursesLabel = new javax.swing.JLabel();
        facultyTerminationSpinner_Month = new javax.swing.JSpinner();
        facultyTerminationSpinner_Day = new javax.swing.JSpinner();
        facultyTerminationSpinner_Year = new javax.swing.JSpinner();
        facultyCoursesListPane = new javax.swing.JScrollPane();
        facultyCoursesListField = new javax.swing.JList<>();
        facultyDateofHireLabel = new javax.swing.JLabel();
        facultyHireSpinner_Month = new javax.swing.JSpinner();
        facultyHireSpinner_Day = new javax.swing.JSpinner();
        facultyHireSpinner_Year = new javax.swing.JSpinner();
        facultyFullTimeRadioButton = new javax.swing.JRadioButton();
        facultyPartTimeRadioButton = new javax.swing.JRadioButton();
        facultySsnLabel = new javax.swing.JLabel();
        facultySsnTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        facultyNameLabel.setText("Faculty Name:");
        getContentPane().add(facultyNameLabel);
        facultyNameLabel.setBounds(30, 20, 120, 14);

        addressLabel.setText("Address:");
        getContentPane().add(addressLabel);
        addressLabel.setBounds(30, 80, 100, 14);
        getContentPane().add(facultyNameTextField);
        facultyNameTextField.setBounds(120, 20, 210, 30);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        getContentPane().add(saveButton);
        saveButton.setBounds(30, 640, 100, 23);

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clearButton);
        clearButton.setBounds(150, 640, 90, 23);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(closeButton);
        closeButton.setBounds(260, 640, 90, 23);
        getContentPane().add(facultyAddressTextField);
        facultyAddressTextField.setBounds(120, 70, 210, 50);
        getContentPane().add(facultySalaryTextField);
        facultySalaryTextField.setBounds(130, 440, 160, 30);

        facultySalaryLabel.setText("Salary:");
        getContentPane().add(facultySalaryLabel);
        facultySalaryLabel.setBounds(30, 440, 70, 14);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 190, 0, 0);

        facultyDateofTerminationLabel.setText("Date of Termination:");
        getContentPane().add(facultyDateofTerminationLabel);
        facultyDateofTerminationLabel.setBounds(20, 390, 120, 14);

        dateOfBirthSpinner_Month.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        getContentPane().add(dateOfBirthSpinner_Month);
        dateOfBirthSpinner_Month.setBounds(130, 220, 50, 30);

        dateOfBirthSpinner_Day.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        getContentPane().add(dateOfBirthSpinner_Day);
        dateOfBirthSpinner_Day.setBounds(200, 220, 50, 30);

        dateOfBirthSpinner_Year.setModel(new javax.swing.SpinnerNumberModel(1980, 1920, 2010, 1));
        getContentPane().add(dateOfBirthSpinner_Year);
        dateOfBirthSpinner_Year.setBounds(270, 220, 70, 30);

        jLabel1.setText("Date of Birth:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 220, 80, 20);

        facultyEmploymentTypeLabel.setText("Full/Part Time:");
        getContentPane().add(facultyEmploymentTypeLabel);
        facultyEmploymentTypeLabel.setBounds(30, 290, 90, 14);

        facultyCoursesLabel.setText("Courses Taught:");
        getContentPane().add(facultyCoursesLabel);
        facultyCoursesLabel.setBounds(30, 500, 120, 14);

        facultyTerminationSpinner_Month.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        getContentPane().add(facultyTerminationSpinner_Month);
        facultyTerminationSpinner_Month.setBounds(130, 390, 50, 30);

        facultyTerminationSpinner_Day.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        getContentPane().add(facultyTerminationSpinner_Day);
        facultyTerminationSpinner_Day.setBounds(200, 390, 50, 30);

        facultyTerminationSpinner_Year.setModel(new javax.swing.SpinnerNumberModel(1980, 1920, 2017, 1));
        getContentPane().add(facultyTerminationSpinner_Year);
        facultyTerminationSpinner_Year.setBounds(270, 390, 70, 30);

        facultyCoursesListField.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = offeredCourseStringList;
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        facultyCoursesListPane.setViewportView(facultyCoursesListField);

        getContentPane().add(facultyCoursesListPane);
        facultyCoursesListPane.setBounds(130, 500, 210, 120);

        facultyDateofHireLabel.setText("Date of Hire:");
        getContentPane().add(facultyDateofHireLabel);
        facultyDateofHireLabel.setBounds(30, 330, 100, 14);

        facultyHireSpinner_Month.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        getContentPane().add(facultyHireSpinner_Month);
        facultyHireSpinner_Month.setBounds(130, 330, 50, 30);

        facultyHireSpinner_Day.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        getContentPane().add(facultyHireSpinner_Day);
        facultyHireSpinner_Day.setBounds(200, 330, 50, 30);

        facultyHireSpinner_Year.setModel(new javax.swing.SpinnerNumberModel(1980, 1920, 2017, 1));
        getContentPane().add(facultyHireSpinner_Year);
        facultyHireSpinner_Year.setBounds(270, 330, 70, 30);

        facultyFullTimeRadioButton.setText("Full time");
        facultyFullTimeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facultyFullTimeRadioButtonActionPerformed(evt);
            }
        });
        getContentPane().add(facultyFullTimeRadioButton);
        facultyFullTimeRadioButton.setBounds(160, 280, 90, 23);

        facultyPartTimeRadioButton.setText("Part time");
        facultyPartTimeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facultyPartTimeRadioButtonActionPerformed(evt);
            }
        });
        getContentPane().add(facultyPartTimeRadioButton);
        facultyPartTimeRadioButton.setBounds(250, 280, 100, 23);

        facultySsnLabel.setText("SSN:");
        getContentPane().add(facultySsnLabel);
        facultySsnLabel.setBounds(30, 140, 70, 14);
        getContentPane().add(facultySsnTextField);
        facultySsnTextField.setBounds(120, 140, 170, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        
            // Create a new faculty object for storing form data
            Faculty aProfessor = new Faculty();

            // Retrieve the string values from the form
            String facultyName = this.facultyNameTextField.getText();
            String facultyAddress = this.facultyAddressTextField.getText();
            String facultySSN = this.facultySsnTextField.getText();
            Double facultySalary = Double.parseDouble(this.facultySalaryTextField.getText());
            
            aProfessor.setName(facultyName);
            aProfessor.setAddress(facultyAddress);
            aProfessor.setSSN(facultySSN);
            aProfessor.setSalary(facultySalary);
            //Retrieve the date values from the form and convert to date objects
            
            int day, month, year;   //temporary integer storage for date conversions
            
            //calendar for storing conversion and transferring date to object
            GregorianCalendar txDate = new GregorianCalendar(); 
            
            //Getting, converting, and storing Birth date spinners
            day = (Integer)this.dateOfBirthSpinner_Day.getValue();
            month = ((Integer)this.dateOfBirthSpinner_Month.getValue() - 1);
            year = (Integer)this.dateOfBirthSpinner_Year.getValue();
            txDate.set(year, month, day);
            aProfessor.setDateOfBirth(txDate);
            
            //Getting, converting, and storing Hire date spinners
            day = month = year = 0;
            txDate = new GregorianCalendar();
            
            day = (Integer)this.facultyHireSpinner_Day.getValue();
            month = ((Integer)this.facultyHireSpinner_Month.getValue() - 1);
            year = (Integer)this.facultyHireSpinner_Year.getValue();
            txDate.set(year, month, day);
            aProfessor.setDateOfHire(txDate);
            
            //Getting, converting, and storing Termination date spinners
            day = month = year = 0;  //reset temp variables
            txDate = new GregorianCalendar();
            
            day = (Integer)this.facultyTerminationSpinner_Day.getValue();
            month = ((Integer)this.facultyTerminationSpinner_Month.getValue() - 1);
            year = (Integer)this.facultyTerminationSpinner_Year.getValue();
            txDate.set(year, month, day);
            aProfessor.setDateOfTermination(txDate);
            
            //Get Radio button state and save
            
            //test for both selected (though it shouldnt be possible (see AWT events))
            
            //test for individual selection and lastly if none selected throw exception
            if (this.facultyFullTimeRadioButton.isSelected())
                aProfessor.setStatus("Full Time");
            else if (this.facultyPartTimeRadioButton.isSelected())
                aProfessor.setStatus("Part Time");
            
               //else, none selected throw exception
                
            //Read in and save courses taught from list box (course ids)
            ArrayList<String> txStringCourseIdList 
                   = new ArrayList<>(this.facultyCoursesListField.getSelectedValuesList());
            
            /** Course list box strings converted to
             * a faculty course object by courseId then added to FacultyCourse list
            **/
            
            ArrayList<FacultyCourse> txFacultyCourseList;
            txFacultyCourseList = new ArrayList<>();
            FacultyCourse fCourse = new FacultyCourse();
            
            //add exception for null or no courses selected before this point
            
            //convert string list to faculty course then to faculty course list
            for (int i = 0; i < txStringCourseIdList.size(); i++)
            {
                fCourse.setCourseId(txStringCourseIdList.get(i));
                txFacultyCourseList.add(fCourse);
                
            }
            
            // Add the list of selected courses to Faculty object
            aProfessor.setListOfCourses(txFacultyCourseList);
            
            // Add faculty member to the facultydatamodel passed to the form
            this.facultydatamodel.getListOfFaculty().add(aProfessor);
            
            //Testing the form with the main method below, not applicable to whole app
//            System.out.println("Save was successfull");
//            System.out.println(facultydatamodel.getListOfFaculty().get(1).toString());
            this.dispose();
            
    }//GEN-LAST:event_saveButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void facultyFullTimeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facultyFullTimeRadioButtonActionPerformed
        this.facultyPartTimeRadioButton.setSelected(false);
    }//GEN-LAST:event_facultyFullTimeRadioButtonActionPerformed

    private void facultyPartTimeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facultyPartTimeRadioButtonActionPerformed
        this.facultyFullTimeRadioButton.setSelected(false);
    }//GEN-LAST:event_facultyPartTimeRadioButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        
        //Erase the text fields
        this.facultyNameTextField.setText("");
        this.facultyAddressTextField.setText("");
        this.facultySsnTextField.setText("");
        this.facultySalaryTextField.setText("");
        
        //Set date spinners to default values
        this.dateOfBirthSpinner_Day.setValue(1);
        this.dateOfBirthSpinner_Month.setValue(1);
        this.dateOfBirthSpinner_Year.setValue(1980);
        
        this.facultyHireSpinner_Day.setValue(1);
        this.facultyHireSpinner_Month.setValue(1);
        this.facultyHireSpinner_Year.setValue(1980);     

        this.facultyTerminationSpinner_Day.setValue(1);
        this.facultyTerminationSpinner_Month.setValue(1);
        this.facultyTerminationSpinner_Year.setValue(1980);
      
        //Deselect radio buttons
        this.facultyFullTimeRadioButton.setSelected(false);
        this.facultyPartTimeRadioButton.setSelected(false);
        
        //Clear course list selections 
        this.facultyCoursesListField.clearSelection();
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputFacultyInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputFacultyInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputFacultyInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputFacultyInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        FacultyDataModel facultydatamodel22 = new FacultyDataModel();
        Faculty testProf = new Faculty();
        facultydatamodel22.getListOfFaculty().add(testProf);
        OfferedCourseDataModel offeredCoursesDataModel22 = new OfferedCourseDataModel();
        
        OfferedCourse testCourse = new OfferedCourse("123", "Biology");
        offeredCoursesDataModel22.getListOfOfferedCourses().add(testCourse);
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputFacultyInfo(facultydatamodel22, offeredCoursesDataModel22).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JSpinner dateOfBirthSpinner_Day;
    private javax.swing.JSpinner dateOfBirthSpinner_Month;
    private javax.swing.JSpinner dateOfBirthSpinner_Year;
    private javax.swing.JTextField facultyAddressTextField;
    private javax.swing.JLabel facultyCoursesLabel;
    private javax.swing.JList<String> facultyCoursesListField;
    private javax.swing.JScrollPane facultyCoursesListPane;
    private javax.swing.JLabel facultyDateofHireLabel;
    private javax.swing.JLabel facultyDateofTerminationLabel;
    private javax.swing.JLabel facultyEmploymentTypeLabel;
    private javax.swing.JRadioButton facultyFullTimeRadioButton;
    private javax.swing.JSpinner facultyHireSpinner_Day;
    private javax.swing.JSpinner facultyHireSpinner_Month;
    private javax.swing.JSpinner facultyHireSpinner_Year;
    private javax.swing.JLabel facultyNameLabel;
    private javax.swing.JTextField facultyNameTextField;
    private javax.swing.JRadioButton facultyPartTimeRadioButton;
    private javax.swing.JLabel facultySalaryLabel;
    private javax.swing.JTextField facultySalaryTextField;
    private javax.swing.JLabel facultySsnLabel;
    private javax.swing.JTextField facultySsnTextField;
    private javax.swing.JSpinner facultyTerminationSpinner_Day;
    private javax.swing.JSpinner facultyTerminationSpinner_Month;
    private javax.swing.JSpinner facultyTerminationSpinner_Year;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}

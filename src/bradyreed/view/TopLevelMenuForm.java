/*
 * Brady Reed
 * Umass Lowell INFO3010
 */
package bradyreed.view;

import bradyreed.exceptionhandling.ErrorDialog;
import bradyreed.model.ClassroomDataModel;
import bradyreed.model.FacultyDataModel;
import bradyreed.model.OfferedCourseDataModel;
import bradyreed.model.StudentDataModel;
import bradyreed.exceptionhandling.*;


/**
 *
 * @author brady
 */
public class TopLevelMenuForm extends javax.swing.JFrame {
    
    OfferedCourseDataModel offeredCoursesDataModel = new OfferedCourseDataModel();
    ClassroomDataModel classroomDataModel = new ClassroomDataModel();
    FacultyDataModel facultyDataModel = new FacultyDataModel();
    StudentDataModel studentDataModel = new StudentDataModel();
    /**
     * Creates new form TopLevelMenuForm
     */
    public TopLevelMenuForm() {
        initComponents();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        saveToXMLMenuItem = new javax.swing.JMenuItem();
        loadFromXMLMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        classroomMenu = new javax.swing.JMenu();
        addClassroom = new javax.swing.JMenuItem();
        listClassrooms = new javax.swing.JMenuItem();
        facultyMenu = new javax.swing.JMenu();
        addFaculty = new javax.swing.JMenuItem();
        listFaculty = new javax.swing.JMenuItem();
        studentMenu = new javax.swing.JMenu();
        addStudent = new javax.swing.JMenuItem();
        listStudent = new javax.swing.JMenuItem();
        courseMenu = new javax.swing.JMenu();
        addCourse = new javax.swing.JMenuItem();
        listCourses = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("File");

        saveToXMLMenuItem.setText("Save to XML");
        saveToXMLMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToXMLMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(saveToXMLMenuItem);

        loadFromXMLMenuItem.setText("Load from XML");
        loadFromXMLMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFromXMLMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(loadFromXMLMenuItem);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(exitMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        classroomMenu.setText("Classrooms");

        addClassroom.setText("Add Classroom");
        addClassroom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClassroomActionPerformed(evt);
            }
        });
        classroomMenu.add(addClassroom);

        listClassrooms.setText("List Classrooms");
        listClassrooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listClassroomsActionPerformed(evt);
            }
        });
        classroomMenu.add(listClassrooms);

        jMenuBar1.add(classroomMenu);

        facultyMenu.setText("Faculty");

        addFaculty.setText("Add Faculty");
        addFaculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFacultyActionPerformed(evt);
            }
        });
        facultyMenu.add(addFaculty);

        listFaculty.setText("List Faculty");
        listFaculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listFacultyActionPerformed(evt);
            }
        });
        facultyMenu.add(listFaculty);

        jMenuBar1.add(facultyMenu);

        studentMenu.setText("Students");

        addStudent.setText("Add Student");
        addStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentActionPerformed(evt);
            }
        });
        studentMenu.add(addStudent);

        listStudent.setText("List Students");
        listStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listStudentActionPerformed(evt);
            }
        });
        studentMenu.add(listStudent);

        jMenuBar1.add(studentMenu);

        courseMenu.setText("Courses");

        addCourse.setText("Add Course");
        addCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseActionPerformed(evt);
            }
        });
        courseMenu.add(addCourse);

        listCourses.setText("List Courses");
        listCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listCoursesActionPerformed(evt);
            }
        });
        courseMenu.add(listCourses);

        jMenuBar1.add(courseMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFacultyActionPerformed
        InputFacultyInfo facultyInputForm = 
                new InputFacultyInfo(facultyDataModel, offeredCoursesDataModel);
            facultyInputForm.setVisible(true);
    }//GEN-LAST:event_addFacultyActionPerformed

    private void addClassroomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClassroomActionPerformed
        InputClassroomInfo addClassroomForm = 
                new InputClassroomInfo(classroomDataModel);
            addClassroomForm.setVisible(true);
    }//GEN-LAST:event_addClassroomActionPerformed

    private void listClassroomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listClassroomsActionPerformed
        ClassroomReportForm listClassroomForm = 
                new ClassroomReportForm(classroomDataModel);
            listClassroomForm.setVisible(true);
    }//GEN-LAST:event_listClassroomsActionPerformed

    private void listFacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listFacultyActionPerformed
        FacultyReportForm listFacultyForm = 
                new FacultyReportForm(facultyDataModel);
            listFacultyForm.setVisible(true);
    }//GEN-LAST:event_listFacultyActionPerformed

    private void addStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentActionPerformed
        InputStudentInfo inputStudentForm = 
                new InputStudentInfo(studentDataModel, offeredCoursesDataModel);
           inputStudentForm.setVisible(true);
           
    }//GEN-LAST:event_addStudentActionPerformed

    private void listStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listStudentActionPerformed
        StudentReportForm listStudentsForm =
            new StudentReportForm(studentDataModel);
        listStudentsForm.setVisible(true);
        
    }//GEN-LAST:event_listStudentActionPerformed

    private void addCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseActionPerformed
        InputCourseOffering listStudentsForm =
            new InputCourseOffering(offeredCoursesDataModel, classroomDataModel);
        listStudentsForm.setVisible(true);
    }//GEN-LAST:event_addCourseActionPerformed

    private void listCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listCoursesActionPerformed
        CourseReportForm listCoursesForm =
            new CourseReportForm(offeredCoursesDataModel);
        listCoursesForm.setVisible(true);
    }//GEN-LAST:event_listCoursesActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    /**
     * Commented out until readXML method is fixed
     *      
    private void loadFromXMLMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFromXMLMenuItemActionPerformed
        try {
        
          
        this.studentDataModel.setListOfStudents(StudentDataModel.readXML());
        
        //This is where the rest of the data model's would have a readXML method
        //invoked to load data
        
        }
        catch (Exception e) {
            try {
                throw new NoDataException("XML file read error");
            }
            catch (NoDataException error) {
                ErrorDialog errordialog = new ErrorDialog(error.getMessage());
                errordialog.setVisible(true);
            }
        }
            
    }//GEN-LAST:event_loadFromXMLMenuItemActionPerformed
/**
 *  Commented out for future development and bug fixing
 * 
    private void saveToXMLMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveToXMLMenuItemActionPerformed
        try {
            
        StudentDataModel.writeXML(this.studentDataModel.getListOfStudents());
        
        //This is where the rest of the data model's would have a writeXML method
        //invoked to save the other data
        
        }
        catch (Exception e) {
            try {
                throw new NoDataException("XML file read error");
            }
            catch (NoDataException error) {
                ErrorDialog errordialog = new ErrorDialog(error.getMessage());
                errordialog.setVisible(true);
            }
        }
    }//GEN-LAST:event_saveToXMLMenuItemActionPerformed
    */
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TopLevelMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TopLevelMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TopLevelMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TopLevelMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TopLevelMenuForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addClassroom;
    private javax.swing.JMenuItem addCourse;
    private javax.swing.JMenuItem addFaculty;
    private javax.swing.JMenuItem addStudent;
    private javax.swing.JMenu classroomMenu;
    private javax.swing.JMenu courseMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu facultyMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem listClassrooms;
    private javax.swing.JMenuItem listCourses;
    private javax.swing.JMenuItem listFaculty;
    private javax.swing.JMenuItem listStudent;
    private javax.swing.JMenuItem loadFromXMLMenuItem;
    private javax.swing.JMenuItem saveToXMLMenuItem;
    private javax.swing.JMenu studentMenu;
    // End of variables declaration//GEN-END:variables
}
